[{"Z:\\react-playground\\apps\\scroll-tab-app\\src\\reportWebVitals.js":"1","Z:\\react-playground\\apps\\scroll-tab-app\\src\\components\\Page.js":"2","Z:\\react-playground\\apps\\scroll-tab-app\\src\\components\\Pageheader.js":"3","Z:\\react-playground\\apps\\scroll-tab-app\\src\\components\\LeftTab.js":"4","Z:\\react-playground\\apps\\scroll-tab-app\\src\\components\\RightTab.js":"5","Z:\\react-playground\\apps\\scroll-tab-app\\src\\components\\ScrollableTabList.js":"6","Z:\\react-playground\\apps\\scroll-tab-app\\src\\App.js":"7","Z:\\react-playground\\apps\\scroll-tab-app\\src\\components\\PageContent.js":"8","Z:\\react-playground\\apps\\scroll-tab-app\\src\\components\\ContentHeader.js":"9","Z:\\react-playground\\apps\\scroll-tab-app\\src\\components\\TabData.js":"10","Z:\\react-playground\\apps\\scroll-tab-app\\src\\components\\AddTab.js":"11","Z:\\react-playground\\apps\\scroll-tab-app\\src\\components\\TabItem.js":"12","Z:\\react-playground\\apps\\scroll-tab-app\\src\\index.js":"13"},{"size":362,"mtime":1606284528797,"results":"14","hashOfConfig":"15"},{"size":280,"mtime":1606330495612,"results":"16","hashOfConfig":"15"},{"size":176,"mtime":1606330574708,"results":"17","hashOfConfig":"15"},{"size":255,"mtime":1606473140679,"results":"18","hashOfConfig":"15"},{"size":260,"mtime":1606474466872,"results":"19","hashOfConfig":"15"},{"size":1189,"mtime":1606489674736,"results":"20","hashOfConfig":"15"},{"size":164,"mtime":1606330474686,"results":"21","hashOfConfig":"15"},{"size":273,"mtime":1606465826385,"results":"22","hashOfConfig":"15"},{"size":3652,"mtime":1606543692262,"results":"23","hashOfConfig":"15"},{"size":138,"mtime":1606468481998,"results":"24","hashOfConfig":"15"},{"size":220,"mtime":1606463555517,"results":"25","hashOfConfig":"15"},{"size":646,"mtime":1606489744235,"results":"26","hashOfConfig":"15"},{"size":500,"mtime":1606284528797,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"157a4a9",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"Z:\\react-playground\\apps\\scroll-tab-app\\src\\reportWebVitals.js",[],"Z:\\react-playground\\apps\\scroll-tab-app\\src\\components\\Page.js",[],"Z:\\react-playground\\apps\\scroll-tab-app\\src\\components\\Pageheader.js",[],"Z:\\react-playground\\apps\\scroll-tab-app\\src\\components\\LeftTab.js",[],"Z:\\react-playground\\apps\\scroll-tab-app\\src\\components\\RightTab.js",[],"Z:\\react-playground\\apps\\scroll-tab-app\\src\\components\\ScrollableTabList.js",["56","57"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport TabItem from \"./TabItem\";\r\n\r\nexport default function ScrollableTabList({\r\n  tabs,\r\n  currentTab,\r\n  onSelectTab,\r\n  scrollValue,\r\n  isLeftScroll,\r\n  handleRemoveTab,\r\n}) {\r\n  const scrollRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    moveR(scrollValue);\r\n  }, [scrollValue]);\r\n\r\n  const moveR = (scrollValue) => {\r\n    if (isLeftScroll) {\r\n      scrollRef.current.scrollLeft = scrollRef.current.scrollLeft - 250;\r\n    } else {\r\n      scrollRef.current.scrollLeft = scrollRef.current.scrollLeft + scrollValue;\r\n    }\r\n  };\r\n\r\n  const handleScroll = (e) => {\r\n    console.log(e);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"flex-6 space-even-flex\"\r\n      ref={scrollRef}\r\n      onScroll={(e) => {\r\n        handleScroll(e);\r\n      }}\r\n    >\r\n      {tabs &&\r\n        tabs.map((tabData) => {\r\n          return (\r\n            <div key={tabData.id}>\r\n              <TabItem\r\n                data={tabData}\r\n                currentTab={currentTab}\r\n                removeTab={handleRemoveTab}\r\n                handleSelect={onSelectTab}\r\n              />\r\n            </div>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n","Z:\\react-playground\\apps\\scroll-tab-app\\src\\App.js",[],"Z:\\react-playground\\apps\\scroll-tab-app\\src\\components\\PageContent.js",["58"],"Z:\\react-playground\\apps\\scroll-tab-app\\src\\components\\ContentHeader.js",["59","60"],"import React, { useEffect, useState } from \"react\";\r\nimport AddTab from \"./AddTab\";\r\nimport LeftTab from \"./LeftTab\";\r\nimport RightTab from \"./RightTab\";\r\nimport ScrollableTabList from \"./ScrollableTabList\";\r\nimport TabData from \"./TabData\";\r\n\r\nexport default function ContentHeader() {\r\n  const tabs = [\r\n    {\r\n      id: 1,\r\n      content: \"Tab1 content\",\r\n    },\r\n    {\r\n      id: 2,\r\n      content: \"Tab2 content\",\r\n    },\r\n    {\r\n      id: 3,\r\n      content: \"Tab3 content\",\r\n    },\r\n  ];\r\n\r\n  const getTabList = () => {\r\n    return tabs;\r\n  };\r\n\r\n  const [tabList, setTabsList] = useState(tabs);\r\n\r\n  const [currentTab, setCurrentTab] = useState(1);\r\n\r\n  const [displayLeft, toggleLeft] = useState(false);\r\n\r\n  const [displayRight, toggleRight] = useState(true);\r\n\r\n  const [alertMessage, setAlertMessage] = useState(\"\");\r\n\r\n  const [tabContent, setTabContent] = useState(tabs[0].content);\r\n\r\n  const [scrollVal, setScrollVal] = useState(0);\r\n\r\n  const [isLeftScroll, toggleLeftScroll] = useState(false);\r\n\r\n  const [isAddTab, toggleAddTab] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!isAddTab) {\r\n      if (tabList.length > 0) handleSelectTab(tabList[0]);\r\n    } else {\r\n      if (tabList.length > 0) handleSelectTab(tabList[tabList.length - 1]);\r\n    }\r\n  }, [tabList]);\r\n\r\n  const handleSelectTab = (tab) => {\r\n    console.log(tab);\r\n    setCurrentTab(tab.id);\r\n    setTabContent(tab.content);\r\n\r\n    if (tab.id === tabList[0].id) {\r\n      toggleLeft(false);\r\n    } else if (tab.id === tabList[tabList.length - 1].id) {\r\n      toggleRight(false);\r\n      toggleLeft(true);\r\n    } else {\r\n      toggleRight(true);\r\n      if (tabList.length >= 3) {\r\n        toggleLeft(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const addNewTab = () => {\r\n    if (tabList.length === 10) {\r\n      setAlertMessage(\"Max limit reached\");\r\n      setTimeout(() => {\r\n        setAlertMessage(\"\");\r\n      }, 4000);\r\n      return;\r\n    }\r\n\r\n    toggleAddTab(true);\r\n\r\n    setTabsList([\r\n      ...tabList,\r\n      {\r\n        id: tabList.length + 1,\r\n        content: \"some new tab content\",\r\n      },\r\n    ]);\r\n\r\n    if (tabList.length >= 3 && currentTab !== 1) {\r\n      toggleLeft(true);\r\n      toggleRight(true);\r\n    } else {\r\n      if (tabList.length >= 1) {\r\n        toggleRight(true);\r\n      }\r\n    }\r\n    setScrollVal(scrollVal + 250);\r\n    handleSelectTab(tabList[tabList.length - 1]);\r\n  };\r\n\r\n  const handleMoveLeft = () => {\r\n    console.log(\"handle move left\");\r\n    handleSelectTab(tabList[currentTab - 1 - 1]);\r\n    if (scrollVal > 0) {\r\n      toggleLeftScroll(true);\r\n      setScrollVal(scrollVal - 250);\r\n    }\r\n  };\r\n\r\n  const handleMoveRight = () => {\r\n    handleSelectTab(tabList[currentTab - 1 + 1]);\r\n    if (scrollVal < 2000) {\r\n      toggleLeftScroll(false);\r\n      setScrollVal(scrollVal + 250);\r\n    }\r\n  };\r\n\r\n  const removeTabFromList = (tabIndex) => {\r\n    const newTablist = tabList.filter((tab) => {\r\n      return tab.id !== tabIndex;\r\n    });\r\n\r\n    setTabsList(newTablist);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {alertMessage && <div className=\"error-message\">{alertMessage}</div>}\r\n      <div className=\"content-header\">\r\n        <LeftTab isVisible={displayLeft} moveLeft={handleMoveLeft} />\r\n        <ScrollableTabList\r\n          tabs={tabList}\r\n          currentTab={currentTab}\r\n          onSelectTab={handleSelectTab}\r\n          scrollValue={scrollVal}\r\n          isLeftScroll={isLeftScroll}\r\n          handleRemoveTab={removeTabFromList}\r\n        />\r\n        <RightTab isVisible={displayRight} moveRight={handleMoveRight} />\r\n        <AddTab addItem={addNewTab} />\r\n      </div>\r\n\r\n      <TabData content={tabContent} />\r\n    </>\r\n  );\r\n}\r\n","Z:\\react-playground\\apps\\scroll-tab-app\\src\\components\\TabData.js",[],"Z:\\react-playground\\apps\\scroll-tab-app\\src\\components\\AddTab.js",[],"Z:\\react-playground\\apps\\scroll-tab-app\\src\\components\\TabItem.js",[],"Z:\\react-playground\\apps\\scroll-tab-app\\src\\index.js",[],{"ruleId":"61","severity":1,"message":"62","line":1,"column":36,"nodeType":"63","messageId":"64","endLine":1,"endColumn":44},{"ruleId":"65","severity":1,"message":"66","line":16,"column":6,"nodeType":"67","endLine":16,"endColumn":19,"suggestions":"68"},{"ruleId":"61","severity":1,"message":"69","line":3,"column":8,"nodeType":"63","messageId":"64","endLine":3,"endColumn":15},{"ruleId":"61","severity":1,"message":"70","line":24,"column":9,"nodeType":"63","messageId":"64","endLine":24,"endColumn":19},{"ruleId":"65","severity":1,"message":"71","line":52,"column":6,"nodeType":"67","endLine":52,"endColumn":15,"suggestions":"72"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'moveR'. Either include it or remove the dependency array.","ArrayExpression",["73"],"'TabData' is defined but never used.","'getTabList' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'handleSelectTab' and 'isAddTab'. Either include them or remove the dependency array.",["74"],{"desc":"75","fix":"76"},{"desc":"77","fix":"78"},"Update the dependencies array to be: [moveR, scrollValue]",{"range":"79","text":"80"},"Update the dependencies array to be: [handleSelectTab, isAddTab, tabList]",{"range":"81","text":"82"},[329,342],"[moveR, scrollValue]",[1275,1284],"[handleSelectTab, isAddTab, tabList]"]